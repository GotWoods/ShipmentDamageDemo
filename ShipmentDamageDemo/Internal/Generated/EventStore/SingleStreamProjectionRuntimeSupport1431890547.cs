// <auto-generated/>
#pragma warning disable
using Marten;
using Marten.Events.Aggregation;
using Marten.Internal.Storage;
using System;
using System.Linq;

namespace Marten.Generated.EventStore
{
    // START: SingleStreamProjectionLiveAggregation1431890547
    public class SingleStreamProjectionLiveAggregation1431890547 : Marten.Events.Aggregation.SyncLiveAggregatorBase<ShipmentDamageDemo.Domain.Carrier>
    {
        private readonly Marten.Events.Aggregation.SingleStreamProjection<ShipmentDamageDemo.Domain.Carrier> _singleStreamProjection;

        public SingleStreamProjectionLiveAggregation1431890547(Marten.Events.Aggregation.SingleStreamProjection<ShipmentDamageDemo.Domain.Carrier> singleStreamProjection)
        {
            _singleStreamProjection = singleStreamProjection;
        }



        public override ShipmentDamageDemo.Domain.Carrier Build(System.Collections.Generic.IReadOnlyList<Marten.Events.IEvent> events, Marten.IQuerySession session, ShipmentDamageDemo.Domain.Carrier snapshot)
        {
            if (!events.Any()) return null;
            ShipmentDamageDemo.Domain.Carrier carrier = null;
            var usedEventOnCreate = snapshot is null;
            snapshot ??= Create(events[0], session);;
            if (snapshot is null)
            {
                usedEventOnCreate = false;
                snapshot = CreateDefault(events[0]);
            }

            foreach (var @event in events.Skip(usedEventOnCreate ? 1 : 0))
            {
                snapshot = Apply(@event, snapshot, session);
            }

            return snapshot;
        }


        public ShipmentDamageDemo.Domain.Carrier Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            return null;
        }


        public ShipmentDamageDemo.Domain.Carrier CreateDefault(Marten.Events.IEvent @event)
        {
            return new ShipmentDamageDemo.Domain.Carrier();
        }


        public ShipmentDamageDemo.Domain.Carrier Apply(Marten.Events.IEvent @event, ShipmentDamageDemo.Domain.Carrier aggregate, Marten.IQuerySession session)
        {
            switch (@event)
            {
                case Marten.Events.IEvent<ShipmentDamageDemo.Domain.CarrierCreated> event_CarrierCreated13:
                    aggregate.Apply(event_CarrierCreated13.Data);
                    break;
                case Marten.Events.IEvent<ShipmentDamageDemo.Domain.CarrierRenamed> event_CarrierRenamed14:
                    aggregate.Apply(event_CarrierRenamed14.Data);
                    break;
            }

            return aggregate;
        }

    }

    // END: SingleStreamProjectionLiveAggregation1431890547
    
    
    // START: SingleStreamProjectionInlineHandler1431890547
    public class SingleStreamProjectionInlineHandler1431890547 : Marten.Events.Aggregation.AggregationRuntime<ShipmentDamageDemo.Domain.Carrier, System.Guid>
    {
        private readonly Marten.IDocumentStore _store;
        private readonly Marten.Events.Aggregation.IAggregateProjection _projection;
        private readonly Marten.Events.Aggregation.IEventSlicer<ShipmentDamageDemo.Domain.Carrier, System.Guid> _slicer;
        private readonly Marten.Internal.Storage.IDocumentStorage<ShipmentDamageDemo.Domain.Carrier, System.Guid> _storage;
        private readonly Marten.Events.Aggregation.SingleStreamProjection<ShipmentDamageDemo.Domain.Carrier> _singleStreamProjection;

        public SingleStreamProjectionInlineHandler1431890547(Marten.IDocumentStore store, Marten.Events.Aggregation.IAggregateProjection projection, Marten.Events.Aggregation.IEventSlicer<ShipmentDamageDemo.Domain.Carrier, System.Guid> slicer, Marten.Internal.Storage.IDocumentStorage<ShipmentDamageDemo.Domain.Carrier, System.Guid> storage, Marten.Events.Aggregation.SingleStreamProjection<ShipmentDamageDemo.Domain.Carrier> singleStreamProjection) : base(store, projection, slicer, storage)
        {
            _store = store;
            _projection = projection;
            _slicer = slicer;
            _storage = storage;
            _singleStreamProjection = singleStreamProjection;
        }



        public override async System.Threading.Tasks.ValueTask<ShipmentDamageDemo.Domain.Carrier> ApplyEvent(Marten.IQuerySession session, Marten.Events.Projections.EventSlice<ShipmentDamageDemo.Domain.Carrier, System.Guid> slice, Marten.Events.IEvent evt, ShipmentDamageDemo.Domain.Carrier aggregate, System.Threading.CancellationToken cancellationToken)
        {
            switch (evt)
            {
                case Marten.Events.IEvent<ShipmentDamageDemo.Domain.CarrierCreated> event_CarrierCreated15:
                    aggregate ??= new ShipmentDamageDemo.Domain.Carrier();
                    aggregate.Apply(event_CarrierCreated15.Data);
                    return aggregate;
                case Marten.Events.IEvent<ShipmentDamageDemo.Domain.CarrierRenamed> event_CarrierRenamed16:
                    aggregate ??= new ShipmentDamageDemo.Domain.Carrier();
                    aggregate.Apply(event_CarrierRenamed16.Data);
                    return aggregate;
            }

            return aggregate;
        }


        public ShipmentDamageDemo.Domain.Carrier Create(Marten.Events.IEvent @event, Marten.IQuerySession session)
        {
            return null;
        }


        public ShipmentDamageDemo.Domain.Carrier CreateDefault(Marten.Events.IEvent @event)
        {
            return new ShipmentDamageDemo.Domain.Carrier();
        }

    }

    // END: SingleStreamProjectionInlineHandler1431890547
    
    
}

